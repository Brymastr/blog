version: "3.7"

services:
  proxy:
    image: traefik:v2.2
    restart: unless-stopped
    environment:
      DO_AUTH_TOKEN: ${DO_AUTH_TOKEN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/config/${NODE_ENV}/traefik.yml:/etc/traefik/traefik.yml
      - ${PWD}/acme.json:/acme.json
    labels:
      traefik.http.routers.api.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.middlewares: auth
      traefik.http.middlewares.auth.basicauth.users: test:${TRAEFIK_PASSWORD}
      traefik.http.services.proxy.loadbalancer.server.port: 8080

  ghost:
    image: ghost:3-alpine
    restart: unless-stopped
    volumes:
      - ./themes/:/var/lib/ghost/content/themes/
      - ./content/:/var/lib/ghost/content/
    environment:
      NODE_ENV: ${NODE_ENV}
      url: ${PROTO}://${DOMAIN}
    labels:
      traefik.http.routers.ghost.rule: Host(`${DOMAIN}`)
      traefik.http.services.ghost.loadbalancer.server.port: 2368

  db:
    image: mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - data:/var/lib/mysql
    labels:
      traefik.enable: "false"

  spiral:
    image: brymastr/spiral
    restart: unless-stopped
    labels:
      traefik.http.routers.spiral.rule: Host(`spiral.${DOMAIN}`)

  primes:
    image: brymastr/primes
    restart: unless-stopped
    labels:
      traefik.http.routers.primes.rule: Host(`primes.${DOMAIN}`)

  halloween:
    build: ./halloween/
    restart: unless-stopped
    labels:
      traefik.http.routers.halloween.rule: Host(`halloween.${DOMAIN}`)

  whoami:
    image: containous/whoami
    labels:
      traefik.http.routers.whoami.rule: Host(`whoami.${DOMAIN}`)

  net-worth-web:
    image: brymastr/net-worth-web
    restart: unless-stopped
    labels:
      traefik.http.routers.net-worth.rule: Host(`net-worth.${DOMAIN}`)

  net-worth-api:
    image: brymastr/net-worth-api
    restart: unless-stopped
    labels:
      traefik.http.routers.net-worth.rule: Host(`net-worth.${DOMAIN}`) && PathPrefix(`/api/`))
volumes:
  data:
